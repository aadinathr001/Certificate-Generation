function generateSlideCertificates() {
  const sheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();
  const data = sheet.getDataRange().getValues();
  const headers = data[0];
  const templateId = 'TEMPLATE_ID'; // Replace with your actual Slides template ID

  const folder = DriveApp.createFolder('GENERATED CERTIFICATES');

  for (let i = 1; i < data.length; i++) {
    const row = data[i];

    // Create placeholder mapping (e.g., {{Name}}: "Alice", {{Date}}: "June 7")
    const placeholders = {};
    headers.forEach((key, index) => {
      placeholders[`{{${key}}}`] = row[index];
    });

    const name = row[0]; // Assuming first column is Name
    const copy = DriveApp.getFileById(templateId).makeCopy(`${name} - Certificate`, folder);
    const presentation = SlidesApp.openById(copy.getId());

    presentation.getSlides().forEach(slide => {
      slide.getShapes().forEach(shape => {
        if (!shape.getText) return;
        const textRange = shape.getText();
        const originalText = textRange.asString();

        let modifiedText = originalText;
        let replaced = false;

        // Replace all placeholders in this text block
        for (const [placeholder, value] of Object.entries(placeholders)) {
          if (modifiedText.includes(placeholder)) {
            modifiedText = modifiedText.replaceAll(placeholder, value);
            replaced = true;
          }
        }

        if (replaced) {
          textRange.clear(); // Remove all old text + styles

          // Force new text in one go
          const newTextRange = textRange.appendText(modifiedText);
          
          // ⚠️ Wait until text is appended, then apply styles

          // Apply default style to whole string
          const length = modifiedText.length;
          newTextRange.getRange(0, length - 1).getTextStyle()
            .setFontFamily('Baskervville SC')
            .setFontSize(35)
            .setBold(true);

          // Apply custom style to the name ({{Name}} value)
          const nameValue = placeholders['{{Name}}'];
          if (nameValue) {
            const nameStart = modifiedText.indexOf(nameValue);
            const nameEnd = nameStart + nameValue.length ; // Inclusive range
            if (nameStart >= 0 && nameEnd >= nameStart) {
              newTextRange.getRange(nameStart, nameEnd).getTextStyle()
                .setFontFamily('Baskervville SC')
                .setFontSize(35)
                .setBold(true);
            }
          }



        }



        
      });
    });

    presentation.saveAndClose();
  }

  SpreadsheetApp.getUi().alert('All certificates generated with multiple placeholders!');
}
